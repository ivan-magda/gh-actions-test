name: Build & Sign macOS App

on:
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Import Apple Developer ID certificate
        run: |
          TEMP_CERT_FILE=$(mktemp)
          echo "${{ secrets.APPLE_CERT_P12_BASE64 }}" | base64 --decode > "$TEMP_CERT_FILE"
          
          # Create a new ephemeral keychain for this job
          KEYCHAIN_PASSWORD=$(openssl rand -base64 32)
          # Create a new ephemeral keychain for this job
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security import "$TEMP_CERT_FILE" \
            -k build.keychain \
            -P "${{ secrets.APPLE_CERT_P12_PASSWORD }}" \
            -T /usr/bin/codesign \
            -T /usr/bin/productsign
          rm -f "$TEMP_CERT_FILE"

          # Make the keychain default and unlock it
          security list-keychains -d user -s build.keychain
          security default-keychain -d user -s build.keychain
          security unlock-keychain -p "KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -lut 7200 build.keychain

      - name: Verify signing identity
        run: |
          set -e
          # Show every code-signing identity in the current keychain
          security find-identity -v -p codesigning

          # Fail the job if the expected identity string is missing
          if ! security find-identity -v -p codesigning | grep -Fq "${{ secrets.APPLE_IDENTITY }}"; then
            echo "❌  Expected signing identity not found in keychain" >&2
            exit 1
          fi
          echo "✅  Signing identity verified"

      - name: Prepare App Store Connect API key
        id: api-key-setup
        run: |
          set -e
          
          mkdir -p "$HOME/private_keys"
          API_KEY_PATH="$HOME/private_keys/AuthKey.p8"
          
          # Decode and save the API key
          echo "${{ secrets.APPLE_API_KEY_BASE64 }}" | base64 --decode > "$API_KEY_PATH"
          chmod 600 "$API_KEY_PATH"
          
          if [ ! -f "$API_KEY_PATH" ]; then
            echo "❌ Failed to create API key file at $API_KEY_PATH" >&2
            exit 1
          fi
          
          echo "api_key_path=$API_KEY_PATH" >> $GITHUB_OUTPUT
          echo "✅ App Store Connect API key prepared successfully at $API_KEY_PATH"
          
      - name: Build, Sign & Notarize
        env:
          APPLE_IDENTITY: ${{ secrets.APPLE_IDENTITY }}
          APPLE_API_KEY: ${{ steps.api-key-setup.outputs.api_key_path }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
        run: |
          echo "🔧  Using API key at: $APPLE_API_KEY"
          echo "🔧  Using identity: $APPLE_IDENTITY"
          echo "🔧  Using API key ID: $APPLE_API_KEY_ID"
          echo "🔧  Using API issuer: $APPLE_API_ISSUER"
